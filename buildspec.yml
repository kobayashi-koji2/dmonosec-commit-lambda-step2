version: 0.2
env:
  shell: bash
  variables:
    # ビルド環境側 環境変数
    SWITCH_ROLE: FALSE
phases:
  pre_build:
    commands:
      - echo 'CodeBuildプロジェクト側 環境変数'
      - echo 'account_id:'${account_id}
      - echo 'global_name:'${global_name}

      - echo 'カレントAccount ID 取得'
      - export CURRENT_ID=$(aws sts get-caller-identity --no-verify | jq -r '.Account')
      - echo 'CURRENT_ID:'${CURRENT_ID}
      
      - echo 'IAMスイッチロール 要否判定'
      - |
        if [ ${account_id} != ${CURRENT_ID} ] ; then
          SWITCH_ROLE=TRUE
          echo 'クロスアカウントでデプロイ実行'
          AWS_STS_CREDENTIALS=$(aws sts assume-role --role-arn "arn:aws:iam::${account_id}:role/${global_name}-iamr-deploy-service" --role-session-name AWSCLI-Session --no-verify)
          export AWS_ACCESS_KEY_ID=$(echo ${AWS_STS_CREDENTIALS} | jq -r '.Credentials.AccessKeyId')
          export AWS_SECRET_ACCESS_KEY=$(echo ${AWS_STS_CREDENTIALS} | jq -r '.Credentials.SecretAccessKey')
          export AWS_SESSION_TOKEN=$(echo ${AWS_STS_CREDENTIALS} | jq -r '.Credentials.SessionToken')
        else
          echo 'シングルアカウントでデプロイ実行'
        fi
      - echo 'SWITCH_ROLE:'${SWITCH_ROLE}
  build:
    commands:
      # 直下にDockerfileがあるディレクトリを取得
      - dirs=`find * -maxdepth 1 -type f -path "*/Dockerfile" -not -path "_local-dev-files*" | sed -e "s/\/Dockerfile$//"`
      - echo dirs:${dirs}
      # コミットIDをイメージのタグに設定
      - image_tag=${CODEBUILD_RESOLVED_SOURCE_VERSION:0:7}
      - echo image_tag:${image_tag}
      - aws ecr get-login-password --region ${AWS_REGION} | docker login --username AWS --password-stdin ${account_id}.dkr.ecr.${AWS_REGION}.amazonaws.com
      - |
        for dir in $dirs;
        do
          echo $dir
          ecr_repository_uri=${account_id}.dkr.ecr.${AWS_REGION}.amazonaws.com/${global_name}-ecr-${dir}
          docker build -t ${dir}:latest -f ${dir}/Dockerfile .
          docker tag ${dir}:latest ${ecr_repository_uri}:${image_tag}
          docker push ${ecr_repository_uri}:${image_tag}
        done
      - echo 'lambdaを更新(ソースコードのデプロイ)'
      - |
        for dir in $dirs;
        do
          echo $dir
          aws lambda update-function-code \
            --function-name ${global_name}-lambda-${dir} \
            --image-uri ${account_id}.dkr.ecr.${AWS_REGION}.amazonaws.com/${global_name}-ecr-${dir}:${image_tag}
        done